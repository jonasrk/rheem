DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:20.876 .. 0:05:56.393, p=0.01%) < (0:00:21.598 .. 0:05:59.049, p=0.01%): Choosing [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]] over [SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:20.876 .. 0:05:56.393, p=0.01%) < (0:00:20.899 .. 0:05:59.319, p=0.01%): Choosing [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkMap[Hotfix], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Pruned plan enumeration from 12 to 4 implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Execute ConcatenationActivator[out@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e]: PlanEnumeration[4x, inputs=[in1@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], in@Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af]], outputs=[out@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e]]] -> [PlanEnumeration[4x, inputs=[in@Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct1-Distinct links]]], 6e509ffa]], outputs=[]]]] (open inputs: [in1@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], in@Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af]]).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 4x4 plan implementations.
INFO main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 2*2=4 concatenation groups (out@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e] -> 1 inputs).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=4339e0de] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=4339e0de] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=153cd6bb] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=153cd6bb] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=61d84e08] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=61d84e08] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=61d84e08] to (0:00:00.033 .. 0:00:00.303, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=2d9f64c9] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=21ac5eb4] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=52d6cd34] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=715d6168] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSource[0->1, id=715d6168] to (0:00:00.807 .. 0:00:08.897, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=27b2faa6] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=27b2faa6] to (0:00:00.147 .. 0:00:01.499, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=6428591a] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=7397c6] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=7397c6] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCache[1->1, id=7397c6] to (0:00:01.075 .. 0:00:11.861, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=1abfe081] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=1abfe081] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=2a685eba] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=2a685eba] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=2a685eba] to (0:00:00.033 .. 0:00:00.303, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=c2e3264] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=107f4980] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=107f4980] to (0:00:00.147 .. 0:00:01.499, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=75a118e6] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=acdcf71] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=acdcf71] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=acdcf71] to (0:00:00.033 .. 0:00:00.303, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=5c1f6d57] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=5c1f6d57] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkBroadcast[1->1, id=f288c14] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkBroadcast[1->1, id=f288c14] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=6794ac0b] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=7be71476] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=7be71476] to (0:00:00.109 .. 0:00:01.188, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=5cb5bb88] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=17b6d426] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=5580d62f] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSource[0->1, id=5580d62f] to (0:00:00.200 .. 0:00:02.092, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=16872c4d] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=671facee] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=671facee] to (0:00:02.077 .. 0:00:22.929, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=46a953cf] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=154bd49b] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=154bd49b] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=154bd49b] to (0:00:00.015 .. 0:00:00.150, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=3a01773b] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=20e3c449] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=20e3c449] to (0:00:02.077 .. 0:00:22.929, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=2c58dcb1] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=680a66dd] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=680a66dd] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=680a66dd] to (0:00:00.015 .. 0:00:00.150, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=472698d] from null to (1,448,611..16,010,966, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=472698d] to (0:00:00.109 .. 0:00:01.188, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Created 16 plan implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - 16 implementations for scope [Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join2-Join target vertex IDs]]], 157853da], Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join3-Join page ranks with vertex IDs]]], 343570b7], Alternative[3x ~Alternative[[Map[Set source vertex ID]]], 687e99d8], Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct1-Distinct links]]], 6e509ffa], Alternative[4x ~Alternative[[PageRank[1->1, id=4cc451f2]]], 3fb1549b], Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af], Alternative[3x ~Alternative[[Map[PageRank (forward)]]], 2a54a73f], Alternative[3x ~Alternative[[Count[PageRank (count vertices)]]], 22ef9844], Alternative[3x ~Alternative[[Map[Set target vertex ID]]], 757277dc], Alternative[3x ~Alternative[[Map[PageRank (initialize ranks)]]], 78123e82], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct2-Distinct vertices]]], 2898ac89], Alternative[3x ~Alternative[[Map[PageRank (prepare adjacencies)]]], bd4dc25], Alternative[3x ~Alternative[[Map[Make page ranks readable]]], 49e5f737], Alternative[3x ~Alternative[[Distinct[PageRank (distinct vertices)]]], 1da2cb77], Alternative[3x ~Alternative[[ReduceBy[PageRank (create adjacencies)]]], 7133da86], Alternative[3x ~Alternative[[Map[Hotfix]]], 5c671d7f], Alternative[3x ~Alternative[[FlatMap[PageRank (extract vertices)]]], 2b91004a], Alternative[3x ~Alternative[[FlatMap[my.udf.CrocoPR.flatMap-Flatten vertices]]], 6f45df59], Alternative[3x ~Alternative[[ZipWithId[Add vertex IDs]]], 671a5887], Alternative[3x ~Alternative[[Join[y.udf.CrocoPR.join1-Join source vertex IDs]]], 71c3b41], Alternative[3x ~Alternative[[LocalCallbackSink[collect()]]], 4c309d4d]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.074 .. 0:06:09.140, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.054 .. 0:06:03.632, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.067 .. 0:06:08.980, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.047 .. 0:06:03.472, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.054 .. 0:06:03.631, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:16.417 .. 0:06:03.002, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.047 .. 0:06:03.471, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.910 .. 0:06:07.342, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.141 .. 0:06:09.895, p=0.01%): [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.121 .. 0:06:04.387, p=0.01%): [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:46.389 .. 0:09:26.310, p=0.01%): [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:46.369 .. 0:09:20.802, p=0.01%): [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.278 .. 0:06:06.027, p=0.01%): [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.141 .. 0:06:09.898, p=0.01%): [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:46.526 .. 0:09:22.442, p=0.01%): [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:46.389 .. 0:09:26.313, p=0.01%): [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.047 .. 0:06:03.472, p=0.01%) < (0:00:21.054 .. 0:06:03.632, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.047 .. 0:06:03.472, p=0.01%) < (0:00:21.121 .. 0:06:04.387, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.067 .. 0:06:08.980, p=0.01%) < (0:00:21.074 .. 0:06:09.140, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.067 .. 0:06:08.980, p=0.01%) < (0:00:21.141 .. 0:06:09.895, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.067 .. 0:06:08.980, p=0.01%) < (0:00:46.389 .. 0:09:26.310, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.047 .. 0:06:03.471, p=0.01%) < (0:00:21.054 .. 0:06:03.631, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.047 .. 0:06:03.471, p=0.01%) < (0:00:21.278 .. 0:06:06.027, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.047 .. 0:06:03.471, p=0.01%) < (0:00:46.526 .. 0:09:22.442, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:20.910 .. 0:06:07.342, p=0.01%) < (0:00:21.141 .. 0:06:09.898, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:20.910 .. 0:06:07.342, p=0.01%) < (0:00:46.389 .. 0:09:26.313, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Pruned plan enumeration from 16 to 6 implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Execute ConcatenationActivator[out@Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b]: PlanEnumeration[4x, inputs=[], outputs=[out@Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b]]] -> [PlanEnumeration[6x, inputs=[in1@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], in@Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af]], outputs=[]]]] (open inputs: []).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 4x6 plan implementations.
INFO main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 2*2=4 concatenation groups (out@Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b] -> 1 inputs).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=33a3c44a] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=33a3c44a] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkBroadcast[1->1, id=5fcfca62] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkBroadcast[1->1, id=5fcfca62] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=499ef98e] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=24934262] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=24934262] to (0:00:00.109 .. 0:00:01.185, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=93f432e] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=288214b1] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=16eedaa6] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSource[0->1, id=16eedaa6] to (0:00:00.200 .. 0:00:02.088, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=28501a4b] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=5b051a5c] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=5b051a5c] to (0:00:02.073 .. 0:00:22.885, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=639aba11] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=341672e] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=341672e] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=341672e] to (0:00:00.015 .. 0:00:00.150, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=2bebb74f] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=58cf8f94] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=58cf8f94] to (0:00:02.073 .. 0:00:22.885, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=6e33fcae] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=34f392be] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=34f392be] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=34f392be] to (0:00:00.015 .. 0:00:00.150, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=3f9f71ff] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=3f9f71ff] to (0:00:00.109 .. 0:00:01.185, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=144ab54] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=144ab54] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=2cfa2c4f] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=2cfa2c4f] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=6ecab872] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=6ecab872] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=6ecab872] to (0:00:00.033 .. 0:00:00.302, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=48eb9836] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=6c518474] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=11b455e5] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=2a066689] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSource[0->1, id=2a066689] to (0:00:00.805 .. 0:00:08.880, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=3e3861d7] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=3e3861d7] to (0:00:00.146 .. 0:00:01.496, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=5e2a3040] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=6d025d1d] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=6d025d1d] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCache[1->1, id=6d025d1d] to (0:00:01.072 .. 0:00:11.839, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=74294c1a] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=74294c1a] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=9e2ad91] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=9e2ad91] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=9e2ad91] to (0:00:00.033 .. 0:00:00.302, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=64524dd] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=79d06bbd] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=79d06bbd] to (0:00:00.146 .. 0:00:01.496, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=47a7a101] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=e8ea697] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=e8ea697] from null to (1,445,813..15,980,041, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=e8ea697] to (0:00:00.033 .. 0:00:00.302, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Created 24 plan implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - 24 implementations for scope [Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join2-Join target vertex IDs]]], 157853da], Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join3-Join page ranks with vertex IDs]]], 343570b7], Alternative[3x ~Alternative[[TextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl]]], 609cd4d8], Alternative[3x ~Alternative[[Map[Set source vertex ID]]], 687e99d8], Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct1-Distinct links]]], 6e509ffa], Alternative[4x ~Alternative[[PageRank[1->1, id=4cc451f2]]], 3fb1549b], Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af], Alternative[3x ~Alternative[[Map[PageRank (forward)]]], 2a54a73f], Alternative[3x ~Alternative[[Count[PageRank (count vertices)]]], 22ef9844], Alternative[3x ~Alternative[[Map[Set target vertex ID]]], 757277dc], Alternative[3x ~Alternative[[Map[PageRank (initialize ranks)]]], 78123e82], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct2-Distinct vertices]]], 2898ac89], Alternative[3x ~Alternative[[Map[PageRank (prepare adjacencies)]]], bd4dc25], Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b], Alternative[3x ~Alternative[[Map[Make page ranks readable]]], 49e5f737], Alternative[3x ~Alternative[[Distinct[PageRank (distinct vertices)]]], 1da2cb77], Alternative[3x ~Alternative[[ReduceBy[PageRank (create adjacencies)]]], 7133da86], Alternative[3x ~Alternative[[Map[Hotfix]]], 5c671d7f], Alternative[3x ~Alternative[[FlatMap[PageRank (extract vertices)]]], 2b91004a], Alternative[3x ~Alternative[[FlatMap[my.udf.CrocoPR.flatMap-Flatten vertices]]], 6f45df59], Alternative[3x ~Alternative[[ZipWithId[Add vertex IDs]]], 671a5887], Alternative[3x ~Alternative[[Join[y.udf.CrocoPR.join1-Join source vertex IDs]]], 71c3b41], Alternative[3x ~Alternative[[LocalCallbackSink[collect()]]], 4c309d4d]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.521 .. 0:06:18.587, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.452 .. 0:06:21.827, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.521 .. 0:06:18.588, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.452 .. 0:06:21.828, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:48.843 .. 0:09:35.918, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], SparkMap[Make page ranks readable], JavaFilter[Filter comments], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:51.774 .. 0:09:39.158, p=0.01%): [SparkMap[Make page ranks readable], JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:28.445 .. 0:06:17.239, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.032 .. 0:06:12.362, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:28.445 .. 0:06:17.240, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.032 .. 0:06:12.363, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:53.767 .. 0:09:34.570, p=0.01%): [SparkMap[Make page ranks readable], JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkFilter[Filter comments], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:49.354 .. 0:09:29.693, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], SparkMap[Make page ranks readable], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkFilter[Filter comments], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.417 .. 0:06:22.761, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.348 .. 0:06:26.001, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.267 .. 0:06:21.283, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.698 .. 0:06:20.023, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.260 .. 0:06:21.123, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.191 .. 0:06:24.363, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:28.498 .. 0:06:23.050, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.085 .. 0:06:18.173, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:28.348 .. 0:06:21.572, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.935 .. 0:06:16.695, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:28.341 .. 0:06:21.412, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:23.928 .. 0:06:16.535, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.521 .. 0:06:18.587, p=0.01%) < (0:00:26.452 .. 0:06:21.827, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.521 .. 0:06:18.587, p=0.01%) < (0:00:28.445 .. 0:06:17.239, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:24.032 .. 0:06:12.362, p=0.01%) < (0:00:23.521 .. 0:06:18.587, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.267 .. 0:06:21.283, p=0.01%) < (0:00:24.032 .. 0:06:12.362, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.260 .. 0:06:21.123, p=0.01%) < (0:00:23.267 .. 0:06:21.283, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.260 .. 0:06:21.123, p=0.01%) < (0:00:26.191 .. 0:06:24.363, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.260 .. 0:06:21.123, p=0.01%) < (0:00:28.348 .. 0:06:21.572, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.260 .. 0:06:21.123, p=0.01%) < (0:00:23.935 .. 0:06:16.695, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.260 .. 0:06:21.123, p=0.01%) < (0:00:28.341 .. 0:06:21.412, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.260 .. 0:06:21.123, p=0.01%) < (0:00:23.928 .. 0:06:16.535, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.521 .. 0:06:18.588, p=0.01%) < (0:00:26.452 .. 0:06:21.828, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.521 .. 0:06:18.588, p=0.01%) < (0:00:48.843 .. 0:09:35.918, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], SparkMap[Make page ranks readable], JavaFilter[Filter comments], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.521 .. 0:06:18.588, p=0.01%) < (0:00:51.774 .. 0:09:39.158, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:23.521 .. 0:06:18.588, p=0.01%) < (0:00:28.445 .. 0:06:17.240, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:24.032 .. 0:06:12.363, p=0.01%) < (0:00:23.521 .. 0:06:18.588, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:24.032 .. 0:06:12.363, p=0.01%) < (0:00:53.767 .. 0:09:34.570, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkFilter[Filter comments], SparkUnionAll[Union links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:24.032 .. 0:06:12.363, p=0.01%) < (0:00:23.417 .. 0:06:22.761, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:24.032 .. 0:06:12.363, p=0.01%) < (0:00:26.348 .. 0:06:26.001, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_pt.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
